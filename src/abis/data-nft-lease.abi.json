{
    "buildInfo": {
        "rustc": {
            "version": "1.71.0-nightly",
            "commitHash": "a2b1646c597329d0a25efa3889b66650f65de1de",
            "commitDate": "2023-05-25",
            "channel": "Nightly",
            "short": "rustc 1.71.0-nightly (a2b1646c5 2023-05-25)"
        },
        "contractCrate": {
            "name": "data-nft-lease",
            "version": "1.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.43.5"
        }
    },
    "name": "DataNftMint",
    "constructor": {
        "inputs": [
            {
                "name": "setup_values",
                "type": "optional<multi<Address,Address>>",
                "multi_arg": true
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "initializeContract",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "collection_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                },
                {
                    "name": "mint_time_limit",
                    "type": "u64"
                },
                {
                    "name": "require_mint_tax",
                    "type": "bool"
                },
                {
                    "name": "claims_address",
                    "type": "Address"
                },
                {
                    "name": "payment",
                    "type": "optional<multi<EgldOrEsdtTokenIdentifier,BigUint>>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "setLocalRoles",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "updateAttributes",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "data_marshal",
                    "type": "bytes"
                },
                {
                    "name": "data_stream",
                    "type": "bytes"
                },
                {
                    "name": "data_preview",
                    "type": "bytes"
                },
                {
                    "name": "creator",
                    "type": "Address"
                },
                {
                    "name": "title",
                    "type": "bytes"
                },
                {
                    "name": "description",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "setTransferRole",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "unsetTransferRole",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "mint",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                },
                {
                    "name": "media",
                    "type": "bytes"
                },
                {
                    "name": "metadata",
                    "type": "bytes"
                },
                {
                    "name": "data_marshal",
                    "type": "bytes"
                },
                {
                    "name": "data_stream",
                    "type": "bytes"
                },
                {
                    "name": "data_preview",
                    "type": "bytes"
                },
                {
                    "name": "royalties",
                    "type": "BigUint"
                },
                {
                    "name": "title",
                    "type": "bytes"
                },
                {
                    "name": "description",
                    "type": "bytes"
                }
            ],
            "outputs": [
                {
                    "type": "DataNftAttributes"
                }
            ]
        },
        {
            "name": "burn",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setIsPaused",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "is_paused",
                    "type": "bool"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMintTaxFee",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "EgldOrEsdtTokenIdentifier"
                },
                {
                    "name": "tax",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "setTaxIsRequired",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "is_required",
                    "type": "bool"
                }
            ],
            "outputs": []
        },
        {
            "name": "setWhiteListEnabled",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "is_enabled",
                    "type": "bool"
                }
            ],
            "outputs": []
        },
        {
            "name": "setWhiteListSpots",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "whitelist",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeWhiteListSpots",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "whitelist",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "setMintTimeLimit",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "mint_time_limit",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setRoyaltiesLimits",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "min_royalties",
                    "type": "BigUint"
                },
                {
                    "name": "max_royalties",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "setAdministrator",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "administrator",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "setClaimsAddress",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "claimRoyalties",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "EgldOrEsdtTokenIdentifier"
                },
                {
                    "name": "nonce",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getMintedTokens",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getMintTax",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getTaxTokens",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ]
        },
        {
            "name": "getTaxIsRequired",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getIsPaused",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getMaxRoyalties",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getMinRoyalties",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getMintedPerAddress",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "mintTimeLimit",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "lastMintTime",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getWhiteList",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getCollectionFrozenList",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getSftsFrozenForAddress",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<u64>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getFrozenCount",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "isWhiteListEnabled",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "rolesAreSet",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getAddressesWithTransferRole",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getAddressesWithUpdateAttributesRole",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getAdministrator",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getRoyaltiesAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getFactoryAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getUserDataOut",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                },
                {
                    "name": "tax_token",
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "UserDataOut"
                }
            ]
        },
        {
            "name": "getContractConfiguration",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "ContractConfiguration"
                }
            ]
        },
        {
            "name": "pause",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "unpause",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "freeze",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "unfreeze",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "freezeSingleNFT",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "nonce",
                    "type": "u64"
                },
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "unFreezeSingleNFT",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "nonce",
                    "type": "u64"
                },
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "wipeSingleNFT",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "nonce",
                    "type": "u64"
                },
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "check_claims",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address_to_check",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "get_claims",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "factory_treasury_address",
            "mutability": "mutable",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "factory_tax",
            "mutability": "mutable",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "factory_claims_contract_address",
            "mutability": "mutable",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "factory_claims_token_identifier",
            "mutability": "mutable",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        }
    ],
    "events": [
        {
            "identifier": "mintPauseToggle",
            "inputs": [
                {
                    "name": "pause_value",
                    "type": "bool",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "setTreasuryAddress",
            "inputs": [
                {
                    "name": "treasury_address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "whitelistEnableToggle",
            "inputs": [
                {
                    "name": "enable_value",
                    "type": "bool",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "whitelistSpotSet",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "collectionFreezeListSpotSet",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "frozenSftsPerAddress",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "unfrozenSftsPerAddress",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "collectionFreezeListRemoved",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "whitelistSpotRemoved",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "setRoyaltiesLimits",
            "inputs": [
                {
                    "name": "min_royalties",
                    "type": "BigUint",
                    "indexed": true
                },
                {
                    "name": "max_royalties",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "mintTaxFee",
            "inputs": [
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "taxIsRequired",
            "inputs": [
                {
                    "name": "tax_is_required",
                    "type": "bool",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "mintTimeLimitSet",
            "inputs": [
                {
                    "name": "mint_time_limit",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "setAdministrator",
            "inputs": [
                {
                    "name": "administrator",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "setFactoryAddress",
            "inputs": [
                {
                    "name": "factory_address",
                    "type": "Address",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "pauseCollection",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "unpauseCollection",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "freeze",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "unfreeze",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "wipe",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "burn",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "mint",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                },
                {
                    "name": "token",
                    "type": "EgldOrEsdtTokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "price",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        }
    ],
    "hasCallback": true,
    "types": {
        "ContractConfiguration": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "minted_tokens",
                    "type": "BigUint"
                },
                {
                    "name": "tax_required",
                    "type": "bool"
                },
                {
                    "name": "is_paused",
                    "type": "bool"
                },
                {
                    "name": "max_royalties",
                    "type": "BigUint"
                },
                {
                    "name": "min_royalties",
                    "type": "BigUint"
                },
                {
                    "name": "mint_time_limit",
                    "type": "u64"
                },
                {
                    "name": "is_whitelist_enabled",
                    "type": "bool"
                },
                {
                    "name": "roles_are_set",
                    "type": "bool"
                },
                {
                    "name": "claims_address",
                    "type": "Address"
                },
                {
                    "name": "administrator_address",
                    "type": "Address"
                },
                {
                    "name": "tax_token",
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ]
        },
        "DataNftAttributes": {
            "type": "struct",
            "fields": [
                {
                    "name": "data_stream_url",
                    "type": "bytes"
                },
                {
                    "name": "data_preview_url",
                    "type": "bytes"
                },
                {
                    "name": "data_marshal_url",
                    "type": "bytes"
                },
                {
                    "name": "creator",
                    "type": "Address"
                },
                {
                    "name": "creation_time",
                    "type": "u64"
                },
                {
                    "name": "title",
                    "type": "bytes"
                },
                {
                    "name": "description",
                    "type": "bytes"
                }
            ]
        },
        "UserDataOut": {
            "type": "struct",
            "fields": [
                {
                    "name": "anti_spam_tax_value",
                    "type": "BigUint"
                },
                {
                    "name": "is_paused",
                    "type": "bool"
                },
                {
                    "name": "max_royalties",
                    "type": "BigUint"
                },
                {
                    "name": "min_royalties",
                    "type": "BigUint"
                },
                {
                    "name": "mint_time_limit",
                    "type": "u64"
                },
                {
                    "name": "last_mint_time",
                    "type": "u64"
                },
                {
                    "name": "whitelist_enabled",
                    "type": "bool"
                },
                {
                    "name": "is_whitelisted",
                    "type": "bool"
                },
                {
                    "name": "minted_per_user",
                    "type": "BigUint"
                },
                {
                    "name": "total_minted",
                    "type": "BigUint"
                },
                {
                    "name": "frozen",
                    "type": "bool"
                },
                {
                    "name": "frozen_nonces",
                    "type": "List<u64>"
                }
            ]
        }
    }
}
